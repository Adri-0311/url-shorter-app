import { lookup } from 'dns';
import { Request, Response } from 'express';
import { set } from 'mongoose';
import generateShort from '../utils/generateShort';

import { IUrl } from './url.interface';
import UrlModel from './url.model';

set('sanitizeFilter', true);

const findUrl = async (short: string) => {
	return await UrlModel.findOne({ short: short });
};

const isValidUrl = (userUrl: string) => {
	let url = '';

	try {
		url = new URL(userUrl).hostname;
	} catch (error) {
		console.error(`Try to convert ${userUrl} in to URL: `, error);
		return false;
	}

	lookup(url, (error) => {
		if (error) {
			console.error(`The url ${url} doesn't exits: `, error);
			return false;
		}
		return true;
	});
};

// Save the url in the DB and inform to the user of the new url shortened
const saveUrl = async (userUrl: string, short: string) => {
	try {
		const newUserUrl: IUrl = new UrlModel({
			url: userUrl,
			short: short,
		});
		await newUserUrl.save();
	} catch (error) {
		console.error('Error to save new URL and it`s short: ', error);
	}
};

// Reception of request body {userUrl} and creation of new entry url and short
const postCreateShort = async (req: Request, res: Response) => {
	const { userUrl } = req.body;

	if (!userUrl) {
		return res
			.status(400)
			.json({ message: 'Specify the Url you need to short...' });
	}

	const verification = isValidUrl(userUrl);

	if (!verification) {
		return res
			.status(500)
			.json({ message: 'Invalid Url, review the format(http://... or https://...) and if exist' });
	}

	// Check if the short autogenerated exits finding in the DB, if exits it's necesary generate other and recheck
	let shortExist = true;
	let short = '';
	do {
		short = generateShort();
		const docUrl = await findUrl(short);
		if (!docUrl) shortExist = false;
	} while (shortExist);

	await saveUrl(userUrl, short);
	
	return res.status(200).json({
		message: 'Url shorter correctly',
		userUrl: userUrl,
		short: short,
	});
};

const getRedirectToUrl = async (req: Request, res: Response) => {
	const { short } = req.params;

	if (short === null) {
		res.status(500).json({ message: 'Needed the short param', type: 'error' });
	}

	// Find in the DB the short asociated to url and redirect the user to url website
	const docUrl = await findUrl(short);
	console.log('Doc obtained from find the short in the findUrl(): ', docUrl);

	if (!docUrl) {
		return res.status(500).json({
			message: `Unable to find this urlshortener: ${short}`,
			type: 'error',
		});
	}

	return res.redirect(301, docUrl.url);
};

export { postCreateShort , getRedirectToUrl };
